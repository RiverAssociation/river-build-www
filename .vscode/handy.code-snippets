{
  "React Map Loop": {
    "prefix": "react-map",
    "body": ["{${1:array}.map((${2:item}) => <div key={${3:key}></div>)}"],
    "description": "React snipped to add map over array."
  },
  "React Provider": {
    "prefix": "react-provider",
    "body": [
      "import { ReactNode } from 'react'",
      "import { createContext, useContext } from 'react'",
      "",
      "export type ${1:ProviderName}Props = {",
      "  children?: ReactNode",
      "}",
      "",
      "export type ${1:ProviderName}ReturnTypes = {",
      "  stringProp?: string",
      "  functionProp?: () => void",
      "  booleanProp?: boolean",
      "}",
      "",
      "const ${1:ProviderName}Context = createContext<${1:ProviderName}ReturnTypes>({",
      "  stringProp: '',",
      "  functionProp: () => {},",
      "  booleanProp: false,",
      "})",
      "",
      "export function use${1:ProviderName}Provider() {",
      "  return useContext(${1:ProviderName}Context)",
      "}",
      "",
      "export function ${1:ProviderName}Provider({ children }: ${1:ProviderName}Props) {",
      "",
      "  return (",
      "    <${1:ProviderName}Context.Provider",
      "      value={{",
      "        stringProp: '',",
      "        functionProp: () => {},",
      "        booleanProp: false,",
      "      }}",
      "    >",
      "      {children}",
      "    </${1:ProviderName}Context.Provider>",
      "  )",
      "}"
    ],
    "description": "Template for a react ts provider config."
  },

  "Supabase Browser Client": {
    "prefix": "supabase-browser-client",
    "body": [
      "import { createClient } from '@supabase/supabase-js';",
      "import { Database } from 'src/types/supabaseTypes';",
      "",
      "export const supabaseBrowserClient = createClient<Database>(",
      "  process.env.NEXT_PUBLIC_SUPABASE_URL,",
      "  process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY,",
      ")"
    ],
    "description": "Supabase client creation."
  },

  "Supabase Service Role Client": {
    "prefix": "supabase-service-role-client",
    "body": [
      "import { createClient } from '@supabase/supabase-js';",
      "import { Database } from 'src/types/supabaseTypes';",
      "",
      "export const supabaseServiceRoleClient = createClient<Database>(",
      "  process.env.NEXT_PUBLIC_SUPABASE_URL,",
      "  process.env.SUPABASE_SERVICE_ROLE_KEY,",
      ")",
      "",
      "export default supabaseServiceRoleClient;"
    ],
    "description": "Supabase service client creation."
  },

  "Supabase GET": {
    "prefix": "supabase-get-query",
    "body": ["const { data, error } = await supabaseBrowserClient.from('db_name').select('*');"],
    "description": "Supabase simple get query."
  },
  "Zustand Store": {
    "prefix": "zustand-store",
    "body": [
      "import create from 'zustand'",
      "",
      "type ${1:State} = {",
      "  ${2:key}: ${3:type}",
      "}",
      "",
      "export const use${1:State}Store = create<${1:State}>((set) => ({",
      "  ${2:key}: ${4:initialValue},",
      "}))",
      ""
    ],
    "description": "Zustand store creation."
  }
}

